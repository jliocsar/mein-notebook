fs from node:fs
path from node:path
{ env } from node:process

* as C from colorette

HOME := env.HOME!
SECRET := env.NOTIZ_SECRET!
TMP_PATH := '/tmp/notiz'
unless fs.existsSync TMP_PATH
  fs.mkdirSync TMP_PATH
NOTIZ_PATH := path.resolve HOME, '.notiz'
OPTIONS_PATH := path.resolve NOTIZ_PATH, 'options'
unless fs.existsSync OPTIONS_PATH
  fs.mkdirSync NOTIZ_PATH
  await Bun.write OPTIONS_PATH, '{}'
OPTIONS_FILE := Bun.file OPTIONS_PATH
EDITOR := env.EDITOR
  or env.VISUAL
  or (OPTIONS_FILE
    |> .json()
    |> await
    |> .editor)
  or 'nvim'
DATABASE_CONFIG_PATH := path.resolve NOTIZ_PATH, 'database'
BANNER := C.magenta
  `
            .   *#          ..   
    :--     -@*  @@  .:     =---  
    =-=.    +@#  @@  =@+     ::   
            =@# :@%  #@= +.       
            @@#%@@+%@# -@+       
        --   +@@@@@@@@@%@#        
        #@*. =@@@@@@@@@@#         
        *@@@@@@@@@@@@@@          
          =#@@@@@@@@@@=          
    ..:     -%@@@@@@@*           
    .:-      .@@@@@@.   .-+      
              .@@#*#@             
          ++=*##@@@*##=:         
  :.:--#%%%%%%%%%%%%%%%%%#*--.-: 

               ${C.italic C.white 'notiz'}

  `
PREVIEW_NOTE_TEMPLATE := """
- [{shortId}] {title}
  - {createdAt} {expiresAt}
"""
EDIT_NOTE_TEMPLATE := """
---
title: {title}
---

{content}
"""
NOTE_VIEW_TEMPLATE := """
# [{shortId}] {title}

{content}

> {createdAt}
> {expiresAt}
"""

export
  BANNER,
  DATABASE_CONFIG_PATH,
  EDITOR,
  HOME,
  EDIT_NOTE_TEMPLATE,
  PREVIEW_NOTE_TEMPLATE,
  NOTIZ_PATH,
  NOTE_VIEW_TEMPLATE,
  OPTIONS_FILE,
  SECRET,
  TMP_PATH
